1.PARA LA CONDICION DECIDIMOS USAR UN STRATEGY YA QUE ES MAS EXTENSIBLE A LA HORA
DE QUERER AGREGAR MAS CONDICIONES DEL USUARIO. LO UNICO QUE TENGO QUE HACER ES IMPLEMENTAR
LOS METODOS DEFINIDOS EN LA INTERFAZ CONDICION, EN CADA UNA DE LAS NUEVAS CONDICIONES.
EL USO DE POLIMORFISMO HACE QUE SEA MAS MANTENIBLE YA QUE CUALQUIER CAMBIO EN ALGUNA 
DE LAS CONDICIONES NO ME VA A AFECTAR A LAS DEMAS.

2.DECIDIMOS REALIZAR UNA ABSTRACCION DE USUARIO GENERANDO UNA SUPERCLASE USUARIO_MINIMO QUE
TIENE LOS ATRIBUTOS NECESARIOS PARA PODER INICIALIZARSE CON LOS DATOS MINIMOS PARA QUE DICHO
USUARIO SEA CONSIDERADO VALIDO SEGUN LOS REQUERIMIENTOS.
LUEGO UN USUARIO,QUE HEREDA DEL USUARIO_MINIMO, QUE TIENE LAS COLECCIONES 
Y METODOS PERTINENTES A LOS DEMAS REQUERIMIENTOS.
LA DECISION SE BASA EN NO TENER UN GOD CLASS QUE TENGA DEMASIADOS METODOS Y ATRIBUTOS QUE
PUEDAN DIFICULTAR EL MANEJO DE LA MISMA. CON ESTO AUMENTAMOS LA COHESION DE DICHAS CLASES
DEJANDOLE AL USUARIO_MINIMO LAS RESPONSABILIDAD DE INICIAR AL USUARIO POR PRIMERA VEZ EN EL SISTEMA
Y A LA SUBCLASE USUARIO LAS RESPONSABILIDADES PERTINENTES DE VALIDAR LAS CONDICIONES PARA OBTENER
RECETAS Y CONDICIONES MEDICAS PREEXISTENTES.

3.CON RESPECTO A LOS CONDIMENTOS, DECIDIMOS QUE SEAN DE LA CLASE INGREDIENTE YA QUE NO AGREGABA VALOR
CREAR UNA CLASE APARTE. ESA CLASE CONDIMENTO TENIA SOLO ACCESORS LO CUAL ERA UN CODE SMELL.
PARA EVITAR DICHO PROBLEMA, GENERAMOS DOS CONSTRUCTORES EN LA CLASE INGREDIENTE DE LOS CUALES UNO TIENE TRES PARAMETROS
Y EL OTRO TIENE DOS, SIENDO EL DE INGREDIENTE Y CONDIMENTO RESPECTIVAMENTE.